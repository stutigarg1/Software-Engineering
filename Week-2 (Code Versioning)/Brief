Code Versioning Brief:
Code versioning is the practice of tracking and managing changes to software code. GitHub, a cloud-based platform built on Git, provides a collaborative and distributed version control system that enables developers to work together efficiently.


Key Concepts in Code Versioning with GitHub:
1) Repository (Repo)
A storage location on GitHub where your project files and their version history live.

2) Commits
Snapshots of your project. Each commit records what changed and why.

3) Branches
Parallel versions of your codebase. The main or master branch is the primary one, but developers use feature branches (feature/login, bugfix/api-crash) to isolate work.

4) Pull Requests (PRs)
Propose and discuss changes before merging them into the main branch. Others can review, comment, and suggest improvements.

5) Merging
Integrating changes from one branch into another (typically from a feature branch into main).

6) Cloning and Forking
Clone: Download a copy of a repo to your local machine.
Fork: Create a personal copy of someone else's repo to propose changes.

7) Issues and Project Boards:
Used to track bugs, enhancements, and plan workflows.


Why GitHub Versioning
- History tracking: See who changed what and when.
- Collaboration: Multiple developers can work on the same codebase.
- Backup: Cloud-hosted with redundancy.
- CI/CD Integration: Supports automated testing and deployment workflows.
- Open source: Easy to share and contribute to projects.
